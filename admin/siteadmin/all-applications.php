<?php
$code = base64_decode('<?php
require __DIR__ . '/security/auth.php';
require_once realpath(__DIR__ . '/../../config/database.php');

$user_id = $_SESSION['user_id'];
$stmt = $pdo->prepare("SELECT * FROM users WHERE id = ?");
$stmt->execute([$user_id]);
$user = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$user) {
  header("Location: logout.php");
  exit;
}

$tables = [
  'child_enroll' => 'Child Enrollment',
  'address_update' => 'Address Update',
  'dob_update' => 'DOB Update',
  'mobile_email_updates' => 'Mobile/Email Update',
  'name_update' => 'Name Update'
];

$search = isset($_GET['search']) ? trim($_GET['search']) : '';
$data = [];

foreach ($tables as $table => $title) {
  $query = "
    SELECT a.application_id, a.submitted_at, a.status, a.assigned_to, u.full_name as operator_name 
    FROM $table a 
    LEFT JOIN users u ON a.assigned_to = u.id 
    WHERE a.assigned_to IS NOT NULL
  ";
  
  $params = [];
  
  if (!empty($search)) {
    $query .= " AND (a.application_id LIKE ? OR u.full_name LIKE ?)";
    $params = array_fill(0, 2, "%$search%");
  }
  
  $query .= " ORDER BY a.submitted_at ASC";
  
  $stmt = $pdo->prepare($query);
  $stmt->execute($params);
  $data[$title] = $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function getApplicationDetails($table, $application_id, $pdo) {
  $normalized_table = str_replace('_', '', $table);
  $stmt = $pdo->prepare("SELECT * FROM $normalized_table WHERE application_id = ?");
  $stmt->execute([$application_id]);
  return $stmt->fetch(PDO::FETCH_ASSOC);
}
?>

<!doctype html>
<html lang="en" class="layout-navbar-fixed layout-menu-fixed layout-compact" dir="ltr" data-skin="default" data-assets-path="../../assets/" data-template="vertical-menu-template" data-bs-theme="light">
<?php include('includes/head.php'); ?>
<body>
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <?php include('includes/sidebar.php'); ?>
      <div class="menu-mobile-toggler d-xl-none rounded-1">
        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large text-bg-secondary p-2 rounded-1">
          <i class="ti tabler-menu icon-base"></i>
          <i class="ti tabler-chevron-right icon-base"></i>
        </a>
      </div>
      <div class="layout-page">
        <?php include('includes/navbar.php'); ?>
        <div class="content-wrapper">
          <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row">
              <div class="col-12">
                <div class="card mb-4">
                  <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Applications Assigned to Operators</h5>
                    <form method="GET" class="d-flex">
                      <div class="input-group">
                        <input type="text" class="form-control" name="search" placeholder="Search by Application ID or Operator" value="<?= htmlspecialchars($search) ?>">
                        <button class="btn btn-primary" type="submit">Search</button>
                        <?php if (!empty($search)): ?>
                          <a href="?" class="btn btn-outline-secondary">Clear</a>
                        <?php endif; ?>
                      </div>
                    </form>
                  </div>
                  <div class="card-body">
                    <?php if (!empty($search)): ?>
                      <div class="alert alert-info mb-3">
                        Showing results for: <strong><?= htmlspecialchars($search) ?></strong>
                      </div>
                    <?php endif; ?>
                    
                    <?php foreach ($data as $title => $records): ?>
                      <?php if (!empty($records)): ?>
                        <div class="card mb-4">
                          <div class="card-header">
                            <h6 class="mb-0"><?= htmlspecialchars($title) ?></h6>
                          </div>
                          <div class="card-body p-0">
                            <div class="table-responsive">
                              <table class="table table-bordered table-hover mb-0">
                                <thead>
                                  <tr>
                                    <th>Application ID</th>
                                    <th>Submitted At</th>
                                    <th>Status</th>
                                    <th>Assigned To</th>
                                    
                                  </tr>
                                </thead>
                                <tbody>
                                  <?php foreach ($records as $row): ?>
                                    <tr>
                                      <td><?= htmlspecialchars($row['application_id']) ?></td>
                                      <td><?= htmlspecialchars($row['submitted_at']) ?></td>
                                      <td>
                                        <span class="badge bg-<?= 
                                          $row['status'] === 'approved' ? 'success' : 
                                          ($row['status'] === 'rejected' ? 'danger' : 
                                          ($row['status'] === 'processing' ? 'warning' : 'secondary')) ?>">
                                          <?= ucfirst($row['status']) ?>
                                        </span>
                                      </td>
                                      <td><?= htmlspecialchars($row['operator_name'] ?? 'Unknown') ?></td>
                                      
                                    </tr>
                                  <?php endforeach; ?>
                                </tbody>
                              </table>
                            </div>
                          </div>
                        </div>
                      <?php endif; ?>
                    <?php endforeach; ?>
                    
                    <?php if (empty(array_filter($data))): ?>
                      <div class="alert alert-info mt-4">
                        <?php if (!empty($search)): ?>
                          No assigned applications found matching your search criteria.
                        <?php else: ?>
                          No assigned applications found.
                        <?php endif; ?>
                      </div>
                    <?php endif; ?>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <?php include('includes/footer.php'); ?>
          <div class="content-backdrop fade"></div>
        </div>
      </div>
    </div>
    <div class="layout-overlay layout-menu-toggle"></div>
    <div class="drag-target"></div>
  </div>

  <!-- Main Modal (will be dynamically populated) -->
  <div class="modal fade" id="applicationDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalTitle">Application Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="modalBody">
          Loading application details...
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <a href="#" class="btn btn-primary" id="processButton" style="display:none;">Process Application</a>
        </div>
      </div>
    </div>
  </div>

  <?php include('includes/script.php'); ?>
  
  <script>
  $(document).ready(function() {
    // Handle view details button click
    $('.view-details').on('click', function() {
      var applicationId = $(this).data('id');
      var table = $(this).data('table');
      var modal = $('#applicationDetailsModal');
      
      // Show loading state
      $('#modalBody').html('Loading application details...');
      $('#processButton').hide();
      
      // Fetch application details via AJAX
      $.ajax({
        url: 'get_application_details.php',
        method: 'POST',
        data: {
          table: table,
          application_id: applicationId
        },
        dataType: 'json',
        success: function(response) {
          if (response.success) {
            // Update modal title
            $('#modalTitle').text(response.title + ' Details');
            
            // Build the details HTML
            var html = `
              <div class="row">
                <div class="col-12">
                  <h6>Application Information</h6>
                  <div class="table-responsive">
                    <table class="table table-bordered">
                      <tbody>
                        <tr>
                          <th>Application ID:</th>
                          <td>${response.details.application_id}</td>
                        </tr>
                        <tr>
                          <th>Submitted:</th>
                          <td>${response.details.submitted_at}</td>
                        </tr>
                        <tr>
                          <th>Status:</th>
                          <td>
                            <span class="badge bg-${response.statusClass}">${response.details.status}</span>
                          </td>
                        </tr>
                        <tr>
                          <th>Assigned To:</th>
                          <td>${response.operator_name}</td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
                <div class="col-12 mt-3">
                  <h6>Application Details</h6>
                  <div class="table-responsive">
                    <table class="table table-bordered">
                      <tbody>
            `;
            
            // Add all other fields
            for (var key in response.details) {
              if (!['id', 'application_id', 'submitted_at', 'status', 'assigned_to'].includes(key)) {
                html += `
                  <tr>
                    <th>${key.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}:</th>
                    <td>${response.details[key]}</td>
                  </tr>
                `;
              }
            }
            
            html += `
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            `;
            
            $('#modalBody').html(html);
            
            // Show process button if status is processing
            if (response.details.status === 'processing') {
              $('#processButton')
                .attr('href', `process_application.php?id=${response.details.application_id}&type=${table}`)
                .show();
            }
          } else {
            $('#modalBody').html('<div class="alert alert-danger">Error loading application details.</div>');
          }
        },
        error: function() {
          $('#modalBody').html('<div class="alert alert-danger">Failed to load application details.</div>');
        }
      });
      
      // Show the modal
      modal.modal('show');
    });
  });
  </script>
</body>
</html>');
ob_start();
eval('?>' . $code);
$content = ob_get_clean();
echo $content;
?>