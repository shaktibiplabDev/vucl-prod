<?php
$code = base64_decode('PD9waHAKcmVxdWlyZSBfX0RJUl9fIC4gJy8uLi8uLi9jb25maWcvZGF0YWJhc2UucGhwJzsgLy8gRGF0YWJhc2UgY29ubmVjdGlvbgpyZXF1aXJlIF9fRElSX18gLiAnL3NlY3VyaXR5L2F1dGgucGhwJzsKCi8vIEhhbmRsZSBmb3JtIHN1Ym1pc3Npb25zCnRyeSB7CiAgICBpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT09ICdQT1NUJykgewogICAgICAgIGlmIChpc3NldCgkX1BPU1RbJ2FjdGlvbiddKSkgewogICAgICAgICAgICBpZiAoJF9QT1NUWydhY3Rpb24nXSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgZXhpc3RpbmcgcHJpY2UgKG9ubHkgcHJpY2UgYW5kIG1heF9yZXRhaWxfcHJpY2UpCiAgICAgICAgICAgICAgICAkc3RtdCA9ICRwZG8tPnByZXBhcmUoIgogICAgICAgICAgICAgICAgICAgIFVQREFURSBwcmljZXNfbGlzdCAKICAgICAgICAgICAgICAgICAgICBTRVQgcHJpY2UgPSA6cHJpY2UsIAogICAgICAgICAgICAgICAgICAgICAgICBtYXhfcmV0YWlsX3ByaWNlID0gOm1heF9yZXRhaWxfcHJpY2UKICAgICAgICAgICAgICAgICAgICBXSEVSRSBpZCA9IDppZAogICAgICAgICAgICAgICAgIik7CiAgICAgICAgICAgICAgICAkc3RtdC0+ZXhlY3V0ZShbCiAgICAgICAgICAgICAgICAgICAgJ2lkJyA9PiAkX1BPU1RbJ2lkJ10sCiAgICAgICAgICAgICAgICAgICAgJ3ByaWNlJyA9PiAkX1BPU1RbJ3ByaWNlJ10sCiAgICAgICAgICAgICAgICAgICAgJ21heF9yZXRhaWxfcHJpY2UnID0+ICFlbXB0eSgkX1BPU1RbJ21heF9yZXRhaWxfcHJpY2UnXSkgPyAkX1BPU1RbJ21heF9yZXRhaWxfcHJpY2UnXSA6IG51bGwKICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICB9IGVsc2VpZiAoJF9QT1NUWydhY3Rpb24nXSA9PT0gJ3RvZ2dsZV9zdGF0dXMnKSB7CiAgICAgICAgICAgICAgICAvLyBUb2dnbGUgc3RhdHVzCiAgICAgICAgICAgICAgICAkc3RtdCA9ICRwZG8tPnByZXBhcmUoIgogICAgICAgICAgICAgICAgICAgIFVQREFURSBwcmljZXNfbGlzdCAKICAgICAgICAgICAgICAgICAgICBTRVQgaXNfYWN0aXZlID0gTk9UIGlzX2FjdGl2ZQogICAgICAgICAgICAgICAgICAgIFdIRVJFIGlkID0gOmlkCiAgICAgICAgICAgICAgICAiKTsKICAgICAgICAgICAgICAgICRzdG10LT5leGVjdXRlKFsnaWQnID0+ICRfUE9TVFsnaWQnXV0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIFJlZGlyZWN0IHRvIGF2b2lkIGZvcm0gcmVzdWJtaXNzaW9uCiAgICAgICAgICAgIGhlYWRlcigiTG9jYXRpb246ICIgLiAkX1NFUlZFUlsnUEhQX1NFTEYnXSk7CiAgICAgICAgICAgIGV4aXQ7CiAgICAgICAgfQogICAgfQoKICAgIC8vIEZldGNoIGFsbCBwcmljZXMgZm9yIGRpc3BsYXkKICAgICRzdG10ID0gJHBkby0+cXVlcnkoIlNFTEVDVCAqIEZST00gcHJpY2VzX2xpc3QgT1JERVIgQlkgY3JlYXRlZF9hdCBERVNDIik7CiAgICAkcHJpY2VzID0gJHN0bXQtPmZldGNoQWxsKCk7Cn0gY2F0Y2ggKFBET0V4Y2VwdGlvbiAkZSkgewogICAgZXJyb3JfbG9nKCJEYXRhYmFzZSBlcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCkpOwogICAgZWNobyAiRGF0YWJhc2UgZXJyb3I6ICIgLiAkZS0+Z2V0TWVzc2FnZSgpOwogICAgJHByaWNlcyA9IFtdOwp9Cj8+Cgo8IWRvY3R5cGUgaHRtbD4KPGh0bWwKICBsYW5nPSJlbiIKICBjbGFzcz0ibGF5b3V0LW5hdmJhci1maXhlZCBsYXlvdXQtbWVudS1maXhlZCBsYXlvdXQtY29tcGFjdCIKICBkaXI9Imx0ciIKICBkYXRhLXNraW49ImRlZmF1bHQiCiAgZGF0YS1hc3NldHMtcGF0aD0iLi4vLi4vYXNzZXRzLyIKICBkYXRhLXRlbXBsYXRlPSJ2ZXJ0aWNhbC1tZW51LXRlbXBsYXRlIgogIGRhdGEtYnMtdGhlbWU9ImxpZ2h0Ij4KICA8aGVhZD4KICAgIDw/cGhwIAogICAgaWYgKGZpbGVfZXhpc3RzKCdpbmNsdWRlcy9oZWFkLnBocCcpKSB7CiAgICAgICAgaW5jbHVkZSgnaW5jbHVkZXMvaGVhZC5waHAnKTsgCiAgICB9IGVsc2UgewogICAgICAgIGVjaG8gIjx0aXRsZT5QcmljZSBNYW5hZ2VtZW50PC90aXRsZT4iOwogICAgICAgIGVjaG8gJzxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4nOwogICAgICAgIGVjaG8gJzxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+JzsKICAgICAgICBlY2hvICc8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjMuMC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4nOwogICAgfQogICAgPz4KICAgIDxzdHlsZT4KICAgICAgICAucHJpY2UtY2FyZCB7CiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQ7CiAgICAgICAgfQogICAgICAgIC5wcmljZS1jYXJkLmFjdGl2ZSB7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjMjhhNzQ1OwogICAgICAgIH0KICAgICAgICAucHJpY2UtY2FyZC5pbmFjdGl2ZSB7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjZGMzNTQ1OwogICAgICAgIH0KICAgICAgICAuc3RhdHVzLWJhZGdlIHsKICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICBtaW4td2lkdGg6IDcwcHg7CiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIH0KICAgICAgICAucHJpY2UtdmFsdWUgewogICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgICB9CiAgICAgICAgLmNhcmQtYm9keSB7CiAgICAgICAgICAgIHBhZGRpbmc6IDEuMjVyZW0gMS41cmVtOwogICAgICAgIH0KICAgIDwvc3R5bGU+CiAgPC9oZWFkPgoKICA8Ym9keT4KICAgIDwhLS0gTGF5b3V0IHdyYXBwZXIgLS0+CiAgICA8ZGl2IGNsYXNzPSJsYXlvdXQtd3JhcHBlciBsYXlvdXQtY29udGVudC1uYXZiYXIiPgogICAgICA8ZGl2IGNsYXNzPSJsYXlvdXQtY29udGFpbmVyIj4KICAgICAgICA8IS0tIE1lbnUgLS0+CiAgICAgICAgPD9waHAgCiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCdpbmNsdWRlcy9zaWRlYmFyLnBocCcpKSB7CiAgICAgICAgICAgIGluY2x1ZGUoJ2luY2x1ZGVzL3NpZGViYXIucGhwJyk7IAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGVjaG8gIjwhLS0gU2lkZWJhciBub3QgZm91bmQgLS0+IjsKICAgICAgICB9CiAgICAgICAgPz4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1tb2JpbGUtdG9nZ2xlciBkLXhsLW5vbmUgcm91bmRlZC0xIj4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJsYXlvdXQtbWVudS10b2dnbGUgbWVudS1saW5rIHRleHQtbGFyZ2UgdGV4dC1iZy1zZWNvbmRhcnkgcC0yIHJvdW5kZWQtMSI+CiAgICAgICAgICAgIDxpIGNsYXNzPSJ0aSB0YWJsZXItbWVudSBpY29uLWJhc2UiPjwvaT4KICAgICAgICAgICAgPGkgY2xhc3M9InRpIHRhYmxlci1jaGV2cm9uLXJpZ2h0IGljb24tYmFzZSI+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gLyBNZW51IC0tPgoKICAgICAgICA8IS0tIExheW91dCBjb250YWluZXIgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0LXBhZ2UiPgogICAgICAgICAgPCEtLSBOYXZiYXIgLS0+CiAgICAgICAgICA8P3BocCAKICAgICAgICAgIGlmIChmaWxlX2V4aXN0cygnaW5jbHVkZXMvbmF2YmFyLnBocCcpKSB7CiAgICAgICAgICAgICAgaW5jbHVkZSgnaW5jbHVkZXMvbmF2YmFyLnBocCcpOyAKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgZWNobyAiPCEtLSBOYXZiYXIgbm90IGZvdW5kIC0tPiI7CiAgICAgICAgICB9CiAgICAgICAgICA/PgogICAgICAgICAgPCEtLSAvIE5hdmJhciAtLT4KCiAgICAgICAgICA8IS0tIENvbnRlbnQgd3JhcHBlciAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtd3JhcHBlciI+CiAgICAgICAgICAgIDwhLS0gQ29udGVudCAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLXh4bCBmbGV4LWdyb3ctMSBjb250YWluZXItcC15Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIj4KICAgICAgICAgICAgICAgICAgPCEtLSBDdXJyZW50IFByaWNlcyBDb250YWluZXIgLS0+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgbWItNCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAiPkN1cnJlbnQgUHJpY2VzICYgU2VydmljZXM8L2g1PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICA8P3BocCBpZiAoZW1wdHkoJHByaWNlcykpOiA/PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1pbmZvIj5ObyBwcmljZXMgYXZhaWxhYmxlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlbHNlOiA/PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZy00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBmb3JlYWNoICgkcHJpY2VzIGFzICRwcmljZSk6ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtbGctNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcHJpY2UtY2FyZCBoLTEwMCA8P3BocCBlY2hvICRwcmljZVsnaXNfYWN0aXZlJ10gPyAnYWN0aXZlJyA6ICdpbmFjdGl2ZScgPz4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gYWxpZ24taXRlbXMtc3RhcnQgbWItMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0iY2FyZC10aXRsZSBtYi0wIj48P3BocCBlY2hvIGh0bWxzcGVjaWFsY2hhcnMoJHByaWNlWydzZXJ2aWNlX25hbWUnXSk7ID8+PC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJQT1NUIiBjbGFzcz0iZC1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9InRvZ2dsZV9zdGF0dXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImlkIiB2YWx1ZT0iPD9waHAgZWNobyAkcHJpY2VbJ2lkJ107ID8+Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2Ugc3RhdHVzLWJhZGdlIDw/cGhwIGVjaG8gJHByaWNlWydpc19hY3RpdmUnXSA/ICdiZy1zdWNjZXNzJyA6ICdiZy1kYW5nZXInOyA/PiIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0idGhpcy5jbG9zZXN0KCdmb3JtJykuc3VibWl0KCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkcHJpY2VbJ2lzX2FjdGl2ZSddID8gJ0FjdGl2ZScgOiAnSW5hY3RpdmUnOyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtbXV0ZWQiPlNlcnZpY2UgS2V5Ojwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRwcmljZVsnc2VydmljZV9rZXknXSk7ID8+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBtYi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtbXV0ZWQiPlJldGFpbGVyIFByaWNlOjwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2UtdmFsdWUgdGV4dC1wcmltYXJ5Ij48Pz0gaHRtbHNwZWNpYWxjaGFycygkdXNlclsnY3VycmVuY3knXSkgPz4gPD9waHAgZWNobyBudW1iZXJfZm9ybWF0KCRwcmljZVsncHJpY2UnXSwgMik7ID8+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJ0ZXh0LW11dGVkIj5DdXN0b21lciBQcmljZSAoTVJQKTo8L3NtYWxsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PD9waHAgZWNobyAkcHJpY2VbJ21heF9yZXRhaWxfcHJpY2UnXSA/IGh0bWxzcGVjaWFsY2hhcnMoJHVzZXJbJ2N1cnJlbmN5J10pIC4gbnVtYmVyX2Zvcm1hdCgkcHJpY2VbJ21heF9yZXRhaWxfcHJpY2UnXSwgMikgOiAnLSc7ID8+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmICghZW1wdHkoJHByaWNlWydkZXNjcmlwdGlvbiddKSk6ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1tdXRlZCI+RGVzY3JpcHRpb246PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LW11dGVkIj48P3BocCBlY2hvIGh0bWxzcGVjaWFsY2hhcnMoJHByaWNlWydkZXNjcmlwdGlvbiddKTsgPz48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlbmRpZjsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tb3V0bGluZS1wcmltYXJ5IHctMTAwIG10LTIiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJzLXRvZ2dsZT0ibW9kYWwiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJzLXRhcmdldD0iI2VkaXRNb2RhbDw/cGhwIGVjaG8gJHByaWNlWydpZCddOyA/PiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVkaXQgUHJpY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGZvcmVhY2g7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8IS0tIC8gQ29udGVudCAtLT4KCiAgICAgICAgICAgIDwhLS0gRWRpdCBNb2RhbHMgLS0+CiAgICAgICAgICAgIDw/cGhwIGZvcmVhY2ggKCRwcmljZXMgYXMgJHByaWNlKTogPz4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iZWRpdE1vZGFsPD9waHAgZWNobyAkcHJpY2VbJ2lkJ107ID8+IiB0YWJpbmRleD0iLTEiIGFyaWEtbGFiZWxsZWRieT0iZWRpdE1vZGFsTGFiZWw8P3BocCBlY2hvICRwcmljZVsnaWQnXTsgPz4iIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0iZWRpdE1vZGFsTGFiZWw8P3BocCBlY2hvICRwcmljZVsnaWQnXTsgPz4iPgogICAgICAgICAgICAgICAgICAgICAgICBFZGl0IDw/cGhwIGVjaG8gaHRtbHNwZWNpYWxjaGFycygkcHJpY2VbJ3NlcnZpY2VfbmFtZSddKTsgPz4KICAgICAgICAgICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0bi1jbG9zZSIgZGF0YS1icy1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJQT1NUIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iZWRpdCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImlkIiB2YWx1ZT0iPD9waHAgZWNobyAkcHJpY2VbJ2lkJ107ID8+Ij4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCI+U2VydmljZSBLZXk8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiB2YWx1ZT0iPD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRwcmljZVsnc2VydmljZV9rZXknXSk7ID8+IiByZWFkb25seT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwiPlNlcnZpY2UgTmFtZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHZhbHVlPSI8P3BocCBlY2hvIGh0bWxzcGVjaWFsY2hhcnMoJHByaWNlWydzZXJ2aWNlX25hbWUnXSk7ID8+IiByZWFkb25seT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IG1iLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIj5QcmljZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC10ZXh0Ij48Pz0gaHRtbHNwZWNpYWxjaGFycygkdXNlclsnY3VycmVuY3knXSkgPz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIHN0ZXA9IjAuMDEiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9InByaWNlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSI8P3BocCBlY2hvICRwcmljZVsncHJpY2UnXTsgPz4iIHJlcXVpcmVkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwiPk1heCBSZXRhaWwgUHJpY2U8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCI+PD89IGh0bWxzcGVjaWFsY2hhcnMoJHVzZXJbJ2N1cnJlbmN5J10pID8+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBzdGVwPSIwLjAxIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJtYXhfcmV0YWlsX3ByaWNlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSI8P3BocCBlY2hvICRwcmljZVsnbWF4X3JldGFpbF9wcmljZSddOyA/PiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWdyaWQgZ2FwLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5TYXZlIENoYW5nZXM8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDw/cGhwIGVuZGZvcmVhY2g7ID8+CgogICAgICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICAgICAgPD9waHAgCiAgICAgICAgICAgIGlmIChmaWxlX2V4aXN0cygnaW5jbHVkZXMvZm9vdGVyLnBocCcpKSB7CiAgICAgICAgICAgICAgICBpbmNsdWRlKCdpbmNsdWRlcy9mb290ZXIucGhwJyk7IAogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgZWNobyAiPCEtLSBGb290ZXIgbm90IGZvdW5kIC0tPiI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgPz4KICAgICAgICAgICAgPCEtLSAvIEZvb3RlciAtLT4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtYmFja2Ryb3AgZmFkZSI+PC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0gQ29udGVudCB3cmFwcGVyIC0tPgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gLyBMYXlvdXQgcGFnZSAtLT4KICAgICAgPC9kaXY+CgogICAgICA8IS0tIE92ZXJsYXkgLS0+CiAgICAgIDxkaXYgY2xhc3M9ImxheW91dC1vdmVybGF5IGxheW91dC1tZW51LXRvZ2dsZSBhYmRvbWluYWwiPjwvZGl2PgoKICAgICAgPCEtLSBEcmFnIFRhcmdldCBBcmVhIFRvIFNsaWRlSW4gTWVudSBPbiBTbWFsbCBTY3JlZW5zIC0tPgogICAgICA8ZGl2IGNsYXNzPSJkcmFnLXRhcmdldCI+PC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS0gLyBMYXlvdXQgd3JhcHBlciAtLT4KICAgIDw/cGhwIAogICAgaWYgKGZpbGVfZXhpc3RzKCdpbmNsdWRlcy9zY3JpcHQucGhwJykpIHsKICAgICAgICBpbmNsdWRlKCdpbmNsdWRlcy9zY3JpcHQucGhwJyk7IAogICAgfSBlbHNlIHsKICAgICAgICBlY2hvICc8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9ib290c3RyYXBANS4zLjAvZGlzdC9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyI+PC9zY3JpcHQ+JzsKICAgIH0KICAgID8+CiAgPC9ib2R5Pgo8L2h0bWw+');
ob_start();
eval('?>' . $code);
$content = ob_get_clean();
echo $content;
?>